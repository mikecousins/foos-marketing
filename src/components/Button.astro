---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'> &{
  class?: string;
  variant?: 'primary' | 'secondary' | 'outline';
};

const { class: className, variant = 'primary',...rest } = Astro.props;

const variants = {
  primary:
    'inline-flex items-center justify-center px-4 py-[calc(--spacing(2)-1px)] \
    rounded-full border border-transparent bg-gray-950 shadow-md \
    text-base font-medium whitespace-nowrap text-white \
    data-disabled:bg-gray-950 data-disabled:opacity-40 data-hover:bg-gray-800',
  secondary:
    'relative inline-flex items-center justify-center px-4 py-[calc(--spacing(2)-1px)] \
    rounded-full border border-transparent bg-white/15 ring-1 shadow-md ring-[#D15052]/15 \
    after:absolute after:inset-0 after:rounded-full after:shadow-[inset_0_0_2px_1px_#ffffff4d] \
    text-base font-medium whitespace-nowrap text-gray-950 \
    data-disabled:bg-white/15 data-disabled:opacity-40 data-hover:bg-white/20',
  outline:
    'inline-flex items-center justify-center px-2 py-[calc(--spacing(1.5)-1px)] \
    rounded-lg border border-transparent ring-1 shadow-sm ring-black/10 \
    text-sm font-medium whitespace-nowrap text-gray-950 \
    data-disabled:bg-transparent data-disabled:opacity-40 data-hover:bg-gray-50',
};

---
<a {...rest} class:list={[className, variants[variant]]}>
  <slot />
</a>